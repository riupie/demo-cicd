name: Build and Deploy

on:
  pull_request:
    paths:
      - "fe-nextjs/**"
      - ".github/workflows/build-deploy-staging.yaml"

  push:
    branches: [main]
    paths:
      - "fe-nextjs/**"
      - ".github/workflows/build-deploy-staging.yaml"

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/fe-nextjs
  K8S_NAMESPACE: default
  CLUSTER_NAME: playground-eks
  REGION: ap-southeast-1

jobs:
  security-scan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './fe-nextjs'
          format: 'table'

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: fe-nextjs/package-lock.json
      - name: Test
        working-directory: fe-nextjs
        run: |
          npm install
          npm ci

  build-and-push:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: ./fe-nextjs
          push: false
          load: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
            ${{ env.IMAGE_NAME }}:latest

      - name: Run Trivy container scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}'
          format: 'table'

      - name: Run Trivy container scan (fail on critical)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
        continue-on-error: false

      - name: Push image (only if scan passes)
        uses: docker/build-push-action@v5
        with:
          context: ./fe-nextjs
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
            ${{ env.IMAGE_NAME }}:latest

  deploy-staging:
    if: github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      
      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      #- name: Configure AWS credentials
      #  uses: aws-actions/configure-aws-credentials@v4
      #  with:
      #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #    aws-region: ${{ env.REGION }}

      - uses: azure/setup-kubectl@v4
        with:
          version: v1.33.0

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION

      - name: Deploy apps to  Kubernetes          
        run: |
          sed "s/SHORT_SHA/${{ steps.vars.outputs.sha_short }}/g" fe-nextjs/kubernetes/deployment.yaml | kubectl apply -n ${{ env.K8S_NAMESPACE }} -f -

      - name: Verify deployment
        run: kubectl rollout status deployment/fe-nextjs -n ${{ env.K8S_NAMESPACE }}